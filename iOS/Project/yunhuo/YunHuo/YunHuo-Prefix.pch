//
//  YunHuo-Prefix.pch
//  YunHuo
//
//  Created by yuyunfeng on 15/1/10.
//  Copyright (c) 2015å¹´ yuyunfeng. All rights reserved.
//

#ifndef YunHuo_YunHuo_Prefix_pch
#define YunHuo_YunHuo_Prefix_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.
#import <Availability.h>

#ifndef __IPHONE_5_0
#warning "This project uses features only available in iOS SDK 5.0 and later."
#endif

#ifdef __OBJC__
#import <UIKit/UIKit.h>
#import <Foundation/Foundation.h>
#import <QuartzCore/QuartzCore.h>
#import <CoreGraphics/CoreGraphics.h>
//#import <MapKit/MapKit.h>
//#import <Photos/Photos.h>
//#import <AudioToolbox/AudioToolbox.h>
//#import <ImageIO/ImageIO.h>

#import "EaseMob.h"
#endif

#define IOS7_OR_LATER   ([[[UIDevice currentDevice] systemVersion] compare:@"7.0"] != NSOrderedAscending)
#define IOS8_OR_LATER   ([[[UIDevice currentDevice] systemVersion] compare:@"8.0"] != NSOrderedAscending)

#pragma mark NSCoding
#define ITEM_CODING_KEY(_item) [NSString stringWithFormat:@"%@_%s",NSStringFromClass([self class]),#_item]
#define CATSTR(a,b)	a##b
#define EncodeItem(item, coder, type) [coder encode##type:item forKey:ITEM_CODING_KEY(item)]
#define DecodeItem(item, coder, _type_) item = [coder CATSTR(decode##_type_,ForKey):ITEM_CODING_KEY(item)]
#define EncodeCGPoint(item, coder) EncodeItem(item, coder, CGPoint)
#define DecodeCGPoint(item, coder) DecodeItem(item, coder, CGPoint)
#define EncodeCGSize(item, coder) EncodeItem(item, coder, CGSize)
#define DecodeCGSize(item, coder) DecodeItem(item, coder, CGSize)
#define EncodeCGRect(item, coder) EncodeItem(item, coder, CGRect)
#define DecodeCGRect(item, coder) DecodeItem(item, coder, CGRect)
#define EncodeInt(item, coder) EncodeItem(item, coder, Int)
#define DecodeInt(item, coder) DecodeItem(item, coder, Int)
#define EncodeFloat(item, coder) EncodeItem(item, coder, Float)
#define DecodeFloat(item, coder) DecodeItem(item, coder, Float)
#define EncodeObject(item, coder) EncodeItem(item, coder, Object)
#define DecodeObject(item, coder) DecodeItem(item, coder, Object)
#define EncodeBool(item, coder) EncodeItem(item, coder, Bool)
#define DecodeBool(item, coder) DecodeItem(item, coder, Bool)
#define EncodeLong(item, coder) EncodeItem(item, coder, Int64)
#define DecodeLong(item, coder) DecodeItem(item, coder, Int64)



#define USERDEFAULT				([NSUserDefaults standardUserDefaults])
#define UnachieverInt(item)		item = [USERDEFAULT integerForKey:ITEM_CODING_KEY(item)]
#define AchieverInt(item)		([USERDEFAULT setInterger:item forKey:ITEM_CODING_KEY(item)])
#define UnachieverBool(item)	item = [USERDEFAULT boolForKey:ITEM_CODING_KEY(item)]
#define AchieverBool(item)		([USERDEFAULT setBool:item forKey:ITEM_CODING_KEY(item)])
#define UnachieverObject(item)	item = [NSKeyedUnarchiver unarchiveObjectWithData:[USERDEFAULT objectForKey:ITEM_CODING_KEY(item)]]
#define AchieverObject(item)	[USERDEFAULT setObject:[NSKeyedArchiver archivedDataWithRootObject:item] forKey:ITEM_CODING_KEY(item)]

#import "YHDataCache.h"

#endif
